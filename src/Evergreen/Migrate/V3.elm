module Evergreen.Migrate.V3 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Dict
import Evergreen.V1.Types
import Evergreen.V3.Types
import Lamdera.Migrations exposing (..)


frontendModel : Evergreen.V1.Types.FrontendModel -> ModelMigration Evergreen.V3.Types.FrontendModel Evergreen.V3.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V1.Types.BackendModel -> ModelMigration Evergreen.V3.Types.BackendModel Evergreen.V3.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V1.Types.FrontendMsg -> MsgMigration Evergreen.V3.Types.FrontendMsg Evergreen.V3.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V1.Types.ToBackend -> MsgMigration Evergreen.V3.Types.ToBackend Evergreen.V3.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V1.Types.BackendMsg -> MsgMigration Evergreen.V3.Types.BackendMsg Evergreen.V3.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V1.Types.ToFrontend -> MsgMigration Evergreen.V3.Types.ToFrontend Evergreen.V3.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V1.Types.FrontendModel -> Evergreen.V3.Types.FrontendModel
migrate_Types_FrontendModel old =
    { key = old.key
    , url = old.url
    , seed = old.seed
    , designation = old.designation
    , locations = old.locations |> migrate_Types_AxialHexLocations
    , selected_tool = old.selected_tool |> migrate_Types_Tool
    , showing_help = old.showing_help
    , creds = old.creds
    , hours = old.hours
    }


migrate_Types_AreaGPRReading : Evergreen.V1.Types.AreaGPRReading -> Evergreen.V3.Types.AreaGPRReading
migrate_Types_AreaGPRReading old =
    case old of
        Evergreen.V1.Types.AreaGPRReading00 ->
            Evergreen.V3.Types.AreaGPRReading00

        Evergreen.V1.Types.AreaGPRReading01 ->
            Evergreen.V3.Types.AreaGPRReading01

        Evergreen.V1.Types.AreaGPRReading02 ->
            Evergreen.V3.Types.AreaGPRReading02

        Evergreen.V1.Types.AreaGPRReading03 ->
            Evergreen.V3.Types.AreaGPRReading03

        Evergreen.V1.Types.AreaGPRReading04 ->
            Evergreen.V3.Types.AreaGPRReading04

        Evergreen.V1.Types.AreaGPRReading05 ->
            Evergreen.V3.Types.AreaGPRReading05

        Evergreen.V1.Types.AreaGPRReading06 ->
            Evergreen.V3.Types.AreaGPRReading06

        Evergreen.V1.Types.AreaGPRReading07 ->
            Evergreen.V3.Types.AreaGPRReading07

        Evergreen.V1.Types.AreaGPRReading08 ->
            Evergreen.V3.Types.AreaGPRReading08

        Evergreen.V1.Types.AreaGPRReading09 ->
            Evergreen.V3.Types.AreaGPRReading09

        Evergreen.V1.Types.AreaGPRReading10 ->
            Evergreen.V3.Types.AreaGPRReading10

        Evergreen.V1.Types.AreaGPRReading11 ->
            Evergreen.V3.Types.AreaGPRReading11

        Evergreen.V1.Types.AreaGPRReading12 ->
            Evergreen.V3.Types.AreaGPRReading12

        Evergreen.V1.Types.AreaGPRReading13 ->
            Evergreen.V3.Types.AreaGPRReading13

        Evergreen.V1.Types.AreaGPRReading14 ->
            Evergreen.V3.Types.AreaGPRReading14

        Evergreen.V1.Types.AreaGPRReading15 ->
            Evergreen.V3.Types.AreaGPRReading15

        Evergreen.V1.Types.AreaGPRReading16 ->
            Evergreen.V3.Types.AreaGPRReading16

        Evergreen.V1.Types.AreaGPRReading17 ->
            Evergreen.V3.Types.AreaGPRReading17

        Evergreen.V1.Types.AreaGPRReading18 ->
            Evergreen.V3.Types.AreaGPRReading18

        Evergreen.V1.Types.AreaGPRReading19 ->
            Evergreen.V3.Types.AreaGPRReading19


migrate_Types_AxialHexLocations : Evergreen.V1.Types.AxialHexLocations -> Evergreen.V3.Types.AxialHexLocations
migrate_Types_AxialHexLocations old =
    old |> Dict.map (\k -> migrate_Types_Location)


migrate_Types_DigStatus : Evergreen.V1.Types.DigStatus -> Evergreen.V3.Types.DigStatus
migrate_Types_DigStatus old =
    case old of
        Evergreen.V1.Types.Undug ->
            Evergreen.V3.Types.Undug

        Evergreen.V1.Types.Dug ->
            Evergreen.V3.Types.Dug


migrate_Types_Location : Evergreen.V1.Types.Location -> Evergreen.V3.Types.Location
migrate_Types_Location old =
    { axial_hex_index = old.axial_hex_index
    , sector_position = old.sector_position
    , state = old.state |> migrate_Types_LocationState
    , dig_status = old.dig_status |> migrate_Types_DigStatus
    , materials = old.materials |> migrate_Types_Materials
    , terrain = old.terrain |> migrate_Types_Terrain
    }


migrate_Types_LocationEcho : Evergreen.V1.Types.LocationEcho -> Evergreen.V3.Types.LocationEcho
migrate_Types_LocationEcho old =
    case old of
        Evergreen.V1.Types.NoEcho ->
            Evergreen.V3.Types.NoEcho

        Evergreen.V1.Types.SpectriteEcho ->
            Evergreen.V3.Types.SpectriteEcho


migrate_Types_LocationFlag : Evergreen.V1.Types.LocationFlag -> Evergreen.V3.Types.LocationFlag
migrate_Types_LocationFlag old =
    case old of
        Evergreen.V1.Types.NoFlag ->
            Evergreen.V3.Types.NoFlag

        Evergreen.V1.Types.SpectreFlag ->
            Evergreen.V3.Types.SpectreFlag

        Evergreen.V1.Types.RealFlag ->
            Evergreen.V3.Types.SpectreFlag


migrate_Types_LocationGPR : Evergreen.V1.Types.LocationGPR -> Evergreen.V3.Types.LocationGPR
migrate_Types_LocationGPR old =
    case old of
        Evergreen.V1.Types.NoGPR ->
            Evergreen.V3.Types.NoGPR

        Evergreen.V1.Types.AreaGPR p0 ->
            Evergreen.V3.Types.AreaGPR (p0 |> migrate_Types_AreaGPRReading)

        Evergreen.V1.Types.PointGPR p0 ->
            Evergreen.V3.Types.PointGPR (p0 |> migrate_Types_PointGPRReading)


migrate_Types_LocationState : Evergreen.V1.Types.LocationState -> Evergreen.V3.Types.LocationState
migrate_Types_LocationState old =
    old |> (\( t1, t2, t3 ) -> ( t1 |> migrate_Types_LocationFlag, t2 |> migrate_Types_LocationGPR, t3 |> migrate_Types_LocationEcho ))


migrate_Types_Materials : Evergreen.V1.Types.Materials -> Evergreen.V3.Types.Materials
migrate_Types_Materials old =
    case old of
        Evergreen.V1.Types.NoMaterials ->
            Evergreen.V3.Types.NoMaterials

        Evergreen.V1.Types.SpectriteMaterials ->
            Evergreen.V3.Types.SpectriteMaterials


migrate_Types_PointGPRReading : Evergreen.V1.Types.PointGPRReading -> Evergreen.V3.Types.PointGPRReading
migrate_Types_PointGPRReading old =
    case old of
        Evergreen.V1.Types.PointGPRReadingX ->
            Evergreen.V3.Types.PointGPRReadingX

        Evergreen.V1.Types.PointGPRReading00 ->
            Evergreen.V3.Types.PointGPRReading00

        Evergreen.V1.Types.PointGPRReading01 ->
            Evergreen.V3.Types.PointGPRReading01

        Evergreen.V1.Types.PointGPRReading02 ->
            Evergreen.V3.Types.PointGPRReading02

        Evergreen.V1.Types.PointGPRReading03 ->
            Evergreen.V3.Types.PointGPRReading03

        Evergreen.V1.Types.PointGPRReading04 ->
            Evergreen.V3.Types.PointGPRReading04

        Evergreen.V1.Types.PointGPRReading05 ->
            Evergreen.V3.Types.PointGPRReading05

        Evergreen.V1.Types.PointGPRReading06 ->
            Evergreen.V3.Types.PointGPRReading06

        Evergreen.V1.Types.PointGPRReading07 ->
            Evergreen.V3.Types.PointGPRReading07

        Evergreen.V1.Types.PointGPRReading08 ->
            Evergreen.V3.Types.PointGPRReading08


migrate_Types_Terrain : Evergreen.V1.Types.Terrain -> Evergreen.V3.Types.Terrain
migrate_Types_Terrain old =
    case old of
        Evergreen.V1.Types.NoTerrain ->
            Evergreen.V3.Types.NoTerrain

        Evergreen.V1.Types.PointedPeaks ->
            Evergreen.V3.Types.PointedPeaks

        Evergreen.V1.Types.RoundedHills ->
            Evergreen.V3.Types.RoundedHills

        Evergreen.V1.Types.MountainPassages ->
            Evergreen.V3.Types.MountainPassages

        Evergreen.V1.Types.SweepingMountains ->
            Evergreen.V3.Types.SweepingMountains

        Evergreen.V1.Types.ImposingPeak ->
            Evergreen.V3.Types.ImposingPeak

        Evergreen.V1.Types.AgelessMountains ->
            Evergreen.V3.Types.AgelessMountains

        Evergreen.V1.Types.CraggyMountains ->
            Evergreen.V3.Types.CraggyMountains


migrate_Types_Tool : Evergreen.V1.Types.Tool -> Evergreen.V3.Types.Tool
migrate_Types_Tool old =
    case old of
        Evergreen.V1.Types.NoTool ->
            Evergreen.V3.Types.NoTool

        Evergreen.V1.Types.HelpTool ->
            Evergreen.V3.Types.HelpTool

        Evergreen.V1.Types.NewGameTool ->
            Evergreen.V3.Types.NewGameTool

        Evergreen.V1.Types.SpectreFlagTool ->
            Evergreen.V3.Types.SpectreFlagTool

        Evergreen.V1.Types.RealFlagTool ->
            Evergreen.V3.Types.SpectreFlagTool

        Evergreen.V1.Types.AreaGPRTool ->
            Evergreen.V3.Types.AreaGPRTool

        Evergreen.V1.Types.PointGPRTool ->
            Evergreen.V3.Types.PointGPRTool

        Evergreen.V1.Types.DigTool ->
            Evergreen.V3.Types.DigTool
